<% layout('/layouts/boilerplate') -%>
<script>


</script>
<style>
     #map {
            height: 500px;
            width: 100%;
            max-width: 800px;
            border: 1px solid #ccc;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }
</style>
<div class="row mt-3">
    <div class="col  offset-2">
        <div class="card listing-card" style="width: 40rem; ">
            <img src="<%= listing.image.url%>" class="card-img-top" alt="listing_image"> 
            <div class="card-body">
                <p class="card-text">
                    <b><%= listing.title %> </b><br>
                    <%= listing.description %> <br>
                    &#x20B9; <%= listing.price ? listing.price.toLocaleString('en-IN') : 'N/A' %> <br>
                    <%= listing.country %> <br>
                    <%= listing.city %> <br>
                </p>
                <div>
                    <a href="/listings/<%=listing._id %>/edit" class="btn btn-dark add-btn">Edit this information</a><br>
                    <form action="/listings/<%=listing._id %>?_method=Delete" method="post">
                        <button class="btn btn-dark add-btn mt-3">Delete this Listings</button>
                    </form>
                </div>
            </div>
        </div> 
        <hr>

        
    </div>
</div>
<div class="row">
    <div class="col-7 mb-3 mt-3 offset-2">
        <hr>
        <h4>Leave a Review</h4>
        <form action="/listings/<%= listing._id %>/reviews" novalidate class="needs-validation form-control" method="post" >
            <div class="">
                <label for="rating" class="form-label">rating</label>
                <input type="range" name="review[rating]" id="rating" min="1" max="5" class="col-5">
            </div>

            <div>
                <label for="comment" class="form-label"> Comment</label>
                <textarea name="review[comment]" id="comment" cols="30" rows="3" class="form-control" required></textarea>
                <div class="invalid-feedback">Please add some comments for review</div>
            </div>
            <button class="btn btn-dark mt-3">Submit</button>
        </form>
    </div>
</div>

<hr>
<div class="col-10 offset-2">
    <p><b>All Review</b></p>
    <div class="row">
            <% for(review of listing.reviews){ %>
                <div class="card col-4 mb-3 ms-3">
                    <div class="card-body">
                        <h5 class="card-title">John doe</h5>
                        <p class="card-text " ><%= review.comment %></p>
                        <p class="card-text "><%= review.rating %>stars</p>
                        <form action="/listings/<%= listing._id %>/reviews/<%=review._id %>?_method=Delete" method="post">
                            <button class="mb-3 btn btn-sm btn-danger">Delete</button>
                        </form>
                    </div>
                </div>
            <% } %>
    </div>
</div>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCIhlu48Rgp5oPbgPAV6CTslmRu5S1mI6g&libraries=places&callback=initMap"  async defer></script>
<div style="height: 80vh;">
    <h2>Location</h2>
    <div id="map"></div>
</div>
    <script>let map;
        async function initMap() {
            const coordinates = <%- JSON.stringify(listing.location.coordinates) %>;
           
          // Define markers data with positions and titles
          const markersData = [
            { position: { lat: coordinates[1], lng:coordinates[0]}, title: "hello" }
          ];
          // Request needed libraries.
          //@ts-ignore
          const { Map } = await google.maps.importLibrary("maps");
          const { AdvancedMarkerElement } = await google.maps.importLibrary("marker");
        
          // The map, centered at the first marker's position
          map = new Map(document.getElementById("map"), {
            zoom: 4,
            center: markersData[0].position,
            mapId: "DEMO_MAP_ID",
          });
        
          // Render markers using foreach
          markersData.forEach(data => {
            new AdvancedMarkerElement({
              map: map,
              position: data.position,
              title: data.title,
            });
          });
        }
        
        initMap();</script>